/*
  Theme and global variables
*/
html {
  overflow-y: scroll;

  --game-spacing: 32px;
  --header-height: 4rem;

  --color-success: hsl(150deg 70% 30%);
  --color-warning: hsl(50deg 100% 30%);
  --color-error: hsl(0deg 70% 45%);
  --color-gray-100: hsl(0deg 0% 10%);
  --color-gray-300: hsl(0deg 0% 25%);
  --color-gray-500: hsl(0deg 0% 50%);
  --color-gray-700: hsl(0deg 0% 75%);
  --color-gray-900: hsl(0deg 0% 90%);
}

/*
  Custom styles
*/
body {
  font-family: sans-serif;
}

@media (max-height: 600px) {
  body {
    --game-spacing: 8px;
  }
}
.header {
  position: relative;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px;
  height: var(--header-height);
  border-bottom: 1px solid var(--color-gray-700);
  color: var(--color-gray-300);
  /* overflow: hidden; */
}
.game-info {
  display: flex;
  align-items: center;
  gap: 1rem;
}
.game-icon {
  width: 8%;
  height: 8%;
}
.header .menu-icon-open {
  background: #3498db;
  border: 2px solid #1a5676;
  border-radius: 50%;
  height: 2.4rem;
  width: 2.4rem;
}
.header .menu-icon-open span {
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
}
.header .menu-icon-open .icon-hidden,
.header .menu .navigation li button .btn-hidden {
  display: none;
}
.sound-toggles span {
  display: flex;
  gap: 1rem;
}
.open-menu,
.close-menu {
  height: 2rem;
  width: 2rem;
  stroke: #f0f0f0;
  transition: all 0.3s;
}
button {
  margin: 0;
  padding: 0;
  border: none;
  background: transparent;
  cursor: pointer;
  text-align: left;
  color: inherit;
}

.wrapper {
  display: flex;
  flex-direction: column;
}

h1 {
  font-size: 2rem;
  line-height: var(--header-height);
  text-align: center;
  text-transform: uppercase;
}

@media (max-width: 25rem) {
  h1 {
    font-size: 1.25rem;
  }
  .header .menu-icon-open {
    height: 1.4rem;
    width: 1.4rem;
  }
  .open-menu,
  .close-menu {
    height: 1.25rem;
    width: 1.25rem;
  }
  .game-icon {
    width: 6%;
    height: 6%;
  }
}

.game-wrapper {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: var(--game-spacing);
  padding: var(--game-spacing) 32px;
  margin: 0 auto;
  min-width: 250px;
  max-width: min(500px, 58vh, 100%);
  animation: moveToRight 0.4s;
}

.guess-results {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.guess {
  display: flex;
  gap: 4px;
  margin-bottom: 4px;
}

.cell {
  position: relative;
  width: 20%;
  display: flex;
  justify-content: center;
  align-items: center;
  place-content: center;
  text-align: center;
  aspect-ratio: 1 / 1;
  border: 2px solid var(--color-gray-700);
  border-radius: var(--radius);
  font-size: 2rem;
}

/*
  Round the corners for the 4 cells at the very corners of
  the game board
*/
.guess:first-of-type .cell:first-of-type {
  --radius: 4px 0px 0px 0px;
}
.guess:first-of-type .cell:last-of-type {
  --radius: 0px 4px 0px 0px;
}
.guess:last-of-type .cell:last-of-type {
  --radius: 0px 0px 4px 0px;
}
.guess:last-of-type .cell:first-of-type {
  --radius: 0px 0px 0px 4px;
}

.cell.correct {
  background: var(--color-success);
  border-color: var(--color-success);
  color: white;
}
.cell.incorrect {
  background: var(--color-gray-300);
  border-color: var(--color-gray-300);
  color: white;
}
.cell.misplaced {
  background: var(--color-warning);
  border-color: var(--color-warning);
  color: white;
}

.guess-input-wrapper {
  display: flex;
  flex-direction: column;
  gap: 8px;
  height: 6.75rem;
}

.guess-input-wrapper label {
  font-size: 1.25rem;
}

.guess-input-wrapper input {
  display: block;
  width: 100%;
  font-size: 2rem;
  border: 2px solid var(--color-gray-300);
  border-radius: 4px;
  padding: 8px 16px;
  outline-offset: 4px;
}
input {
  border: 3px solid #3498db;
  border-radius: 5px;
  font-weight: 600;
}
input:focus {
  outline: 3px solid #3498db;
  border: 3px solid transparent;
}
.banner {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  max-width: 600px;
  margin: 0 auto;
  padding: 32px;
  text-align: center;
  animation: slideUp 750ms cubic-bezier(0, 0.72, 0.24, 1.02);
  border-radius: 4px 4px 0px 0px;
  will-change: transform;
}

.happy.banner {
  background: var(--color-success);
  color: white;
}
.sad.banner {
  background: var(--color-error);
  color: white;
}

.visually-hidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

/*
  Modal styles

  HACK: I'm doing this in a quick and dirty way.
  Later in the course, we'll see my preferred way of building
  modals in React.
*/
[data-reach-dialog-content] {
  position: relative;
  border-radius: 8px;
  padding: 24px 32px;
}
.modal-close-btn {
  position: absolute;
  top: 0;
  right: 0;
  padding: 16px;
  cursor: pointer;
}
.modal-title {
  margin-bottom: 0.5em;
}

.restart {
  margin-top: 10px;
  padding: 5px 10px;
  border-radius: 10%;
  background: rgb(128, 30, 30);
  color: #f7f7f7;
  border: 2px solid currentColor;
  text-transform: uppercase;
  font-size: 20px;
  transition: all 0.4s;
}
.restart:hover {
  background: #f7f7f7;
  color: rgb(128, 30, 30);
  border-color: currentColor;
  font-weight: 700;
}
.hidden {
  display: none;
}
.dark {
  background: #333;
}
.theme {
  background: #f7f7f7;
  border: 3px solid #333;
  text-align: center;
}

.instructions {
  background: #ccc;
  padding: 10px;
  border-radius: 5px;
  border: 2px solid #888;
  margin: 0;
  margin-top: 1rem;
  display: none;
  transition: all 0.4s;
}
.instructions-open {
  display: block;
}
.instructions__heading {
  color: #222;
  text-transform: uppercase;
  font-weight: 800;
  letter-spacing: 1px;
}

.instructions__list {
  display: flex;
  flex-direction: column;
  gap: 10px;
  padding: 16px;
}
.instructions__list li {
  color: #444;
  font-size: 12px;
}
.color {
  display: inline-block;
  text-align: center;
  width: 12px;
  height: 12px;
  border-radius: 100%;
  margin: 0 5px;
}
.success {
  background: var(--color-success);
}
.warning {
  background: var(--color-warning);
}
.incorrect {
  background: var(--color-gray-300);
}

.menu__close {
  position: absolute;
  left: 100%;
  top: 0;
  transition: all 0.4s;
}
.menu__open {
  position: absolute;
  border-radius: 5px;
  top: 110%;
  right: 1%;
  background: #e0e5ec;
  padding: 2rem 3rem;
  z-index: 1;
  overflow: hidden;
  transition: all 0.4s !important;
  box-shadow: 0 0.5rem 2rem rgba(0, 0, 0, 0.4);
}
.navigation {
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 0;
  overflow: hidden;
}

.navigation li button {
  display: flex;
  gap: 1rem;
  text-transform: uppercase;
  font-weight: 800;
  color: #333;
}
.footer {
  color: #121212;
  border-top: 1px solid var(--color-gray-700);
  padding: 1rem;
}
/*
  Keyframe animations
*/
@keyframes slideUp {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0%);
  }
}
@keyframes moveToRight {
  0% {
    opacity: 0;
    transform: translateX(-100%);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}
